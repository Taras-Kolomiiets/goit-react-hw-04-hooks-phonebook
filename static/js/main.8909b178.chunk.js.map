{"version":3,"sources":["components/contacts/Contacts.jsx","components/phonebookForm/PhonebookForm.jsx","App.js","index.js","components/contacts/Contacts.module.css","components/phonebookForm/PhonebookForm.module.css"],"names":["Contacts","contacts","setContacts","useState","filter","setFilter","type","onChange","e","target","value","className","s","list","normalizedFilter","toLowerCase","contact","name","includes","getFilteredContacts","map","id","number","onClick","deleteContact","button","PhonebookForm","setName","tel","setTel","label","pattern","title","required","preventDefault","length","alert","uuidv4","App","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8909b178.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Contacts.module.css\";\r\n\r\nconst Contacts = ({ contacts, setContacts }) => {\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const addFilter = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    if (filter) {\r\n      return contacts.filter((contact) => {\r\n        return contact.name.toLowerCase().includes(normalizedFilter);\r\n      });\r\n    }\r\n    return contacts;\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    setContacts(() => {\r\n      return contacts.filter((contact) => contact.id !== id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h2>Contacts</h2>\r\n      <h3>Find contacts by name:</h3>\r\n      <input type=\"text\" onChange={addFilter} />\r\n      <ul className={s.list}>\r\n        {getFilteredContacts().map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className={s.contact}>\r\n              <div className={s.name}> {name}</div>\r\n              <div className={s.number}>{number}</div>\r\n              <button\r\n                onClick={() => {\r\n                  deleteContact(id);\r\n                }}\r\n                className={s.button}\r\n              >\r\n                Delete contact\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  setContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./PhonebookForm.module.css\";\r\n\r\nconst PhonebookForm = ({ setContacts, contacts }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n\r\n  const addName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const addTel = (e) => {\r\n    setTel(e.target.value);\r\n  };\r\n\r\n  const addContact = (e) => {\r\n    e.preventDefault();\r\n    const contact = contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(name.toLowerCase());\r\n    });\r\n\r\n    if (contact.length === 1) {\r\n      alert(`${name} is already in your Contacts.`);\r\n    }\r\n    if (name === \"\" || tel === \"\") {\r\n      alert(`Add name and number!`);\r\n    } else {\r\n      setContacts([...contacts, { id: uuidv4(), name: name, number: tel }]);\r\n      setName(\"\");\r\n      setTel(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <div>\r\n          <label className={s.label}>Name</label>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={addName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <div>\r\n          <label className={s.label}>Number</label>\r\n        </div>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={tel}\r\n          onChange={addTel}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <div>\r\n          <button type=\"submit\" onClick={addContact} className=\"floatingButton\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n    </>\r\n  );\r\n};\r\n\r\nPhonebookForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  setContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import React, { useEffect, useState } from \"react\";\nimport Contacts from \"./components/contacts\";\nimport PhonebookForm from \"./components/phonebookForm\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"app\">\n      <h1>Phonebook</h1>\n      <PhonebookForm contacts={contacts} setContacts={setContacts} />\n      <Contacts contacts={contacts} setContacts={setContacts} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1WkZf\",\"contact\":\"Contacts_contact__1UFzS\",\"name\":\"Contacts_name__1001F\",\"number\":\"Contacts_number__1_pva\",\"button\":\"Contacts_button__23Cha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PhonebookForm_label__11G33\"};"],"sourceRoot":""}